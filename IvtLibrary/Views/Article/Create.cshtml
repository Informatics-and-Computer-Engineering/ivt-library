@using IvtLibrary.Helpers
@using System.Web.Mvc.Html

@model IvtLibrary.Article

@{
    ViewBag.Title = "Статья";
}

<h2>Создание статьи</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">

    var fileCounter = 0;
    
    function extractFileName(fileName,fieldName) {
        //извлекаем путь к файлу и разделяем его на части по \\
        var splittedPath = $('#'+fileName)[0].value.split('\\');
        //сохраняем последний компонент пути - имя файла
        $('#'+fieldName)[0].value = splittedPath[splittedPath.length - 1];
    }
    function AddFile() {
        
        var fileTypes = new Array();
        
        @foreach (var option in ViewBag.types)
        {
            @:fileTypes.push($("<option></option>").attr("value",@option.Value).text('@option.Text'));
        }
        $("#file_div").append($('<input/>').attr('type', 'file').attr('name', 'file_data' + fileCounter).attr('onchange', 'extractFileName("file_data' + fileCounter + '","fileName' + fileCounter + '")'));
        $("#file_div").append($('<input/>').attr('type', 'hidden').attr('name', 'fileName' + fileCounter));
        $("#file_div").append($('<br/>'));
        var selectList = $('<select/>').attr('name', 'type_id');
        for (var i = 0; i < fileTypes.length; i++) 
        {
            selectList.append(fileTypes[i]);
        }
        $("#file_div").append(selectList);
        $("#file_div").append($('<br/>'));
        $("#file_div").append($('<input/>').attr('type', 'number').attr('name', 'version').attr('value', 1).attr('min',1));
        $("#file_div").append($('<br/>'));
        fileCounter++;
        return false;
    }
</script>

@using (Html.BeginForm("Create", "Article", FormMethod.Post, new { enctype = "multipart/form-data" })) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Статья</legend>
        
        <input type="button" onclick="AddFile()" value="Добавить файл"/>

        <div id="file_div"></div>

        <input type="hidden" name="articleFileName" id="articleFileName"/>
        <input type="hidden" name="presentationFileName" id="presentationFileName"/>
        <input type="hidden" name="proposalFileName" id="proposalFileName"/>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Author, "Авторы статьи")
        </div>
        <div class="editor-field">
            @Html.CheckBoxList("authorIds", (List<SelectListItem>)ViewBag.AuthorsList)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.name, "Название статьи")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.name)
            @Html.ValidationMessageFor(model => model.name)
        </div>

        <div class="editor-label">
            Тезисы/статья
        </div>
        <input type="file" name="article_file" id="article_file" onchange="extractFileName('article_file','articleFileName');"/>

        <div class="editor-label">
            Презентация
        </div>
        <input type="file" name="presentation_file" id="presentation_file" onchange="extractFileName('presentation_file','presentationFileName');"/>

        <div class="editor-label">
            Заявка/анкета
        </div>
        <input type="file" name="proposal_file" id="proposal_file" onchange="extractFileName('proposal_file','proposalFileName');"/>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Theme, "Тематика статьи")
        </div>
        <div class="editor-field">
            @Html.CheckBoxList("themeIds", (List<SelectListItem>)ViewBag.ThemesList)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.city_id, "Город")
        </div>
        <div class="editor-field">
            @Html.DropDownList("city_id", String.Empty)
            @Html.ValidationMessageFor(model => model.city_id)
            @Html.ActionLink("Добавить город", "Create", "City")
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.conference_id, "Конференция")
        </div>
        <div class="editor-field">
            @Html.DropDownList("conference_id", String.Empty)
            @Html.ValidationMessageFor(model => model.conference_id)
            @Html.ActionLink("Создать новую конференцию", "Create", "Conference")
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.year, "Год")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.year)
            @Html.ValidationMessageFor(model => model.year)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.supervisor_id, "Научный руководитель")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.supervisor_id, (List<SelectListItem>)ViewBag.AuthorsList)
            @Html.ValidationMessageFor(model => model.supervisor_id)
            @Html.ActionLink("Добавить научного руководителя", "Create", "Author")
        </div>
        
                <div class="editor-label">
            @Html.LabelFor(model => model.conference_start_date, "Дата начала конференции")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.conference_start_date)
            @Html.ValidationMessageFor(model => model.conference_start_date)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.conference_end_date, "Дата окончания конференции")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.conference_end_date)
            @Html.ValidationMessageFor(model => model.conference_end_date)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.publication_date, "Дата публикации")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.publication_date)
            @Html.ValidationMessageFor(model => model.publication_date)
        </div>

        <p>
            <input type="submit" value="Создать" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Назад к списку статей", "Index")
</div>