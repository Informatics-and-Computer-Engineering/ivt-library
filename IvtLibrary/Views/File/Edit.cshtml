@model IvtLibrary.File

@{
    ViewBag.Title = "Файл";
}

<h2>Редактирование</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    function extractFileName() {
        var splittedPath = $('#file_data')[0].value.split('\\');
        $('#name')[0].value = splittedPath[splittedPath.length - 1];
    }
</script>
@using (Html.BeginForm("Edit", "File", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Файл</legend>

        @Html.HiddenFor(model => model.id)

        <div class="editor-label">
            @Html.LabelFor(model => model.name, "Название")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.name)
            @Html.ValidationMessageFor(model => model.name)
        </div>
        
        <input type="file" name="file_data" id="file_data" onchange="extractFileName();"/>

        <div class="editor-label">
            @Html.LabelFor(model => model.content_type, "Расширение")
        </div>
        <div class="editor-field">
            @Html.LabelFor(model => model.content_type)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.type_id, "Тип")
        </div>
        <div class="editor-field">
            @Html.DropDownList("type_id", String.Empty)
            @Html.ValidationMessageFor(model => model.type_id)
            @Html.ActionLink("Создать новый тип", "Create", "Type")
        </div>

        <p>
            <input type="submit" value="Сохранить" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Назад к списку", "Index")
</div>